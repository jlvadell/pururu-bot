name: Deploy EC2
on:
  push:
    tags:
      - 'v*'
  pull_request: #just for testing remove after
    types: [ opened, synchronize, reopened ] #just for testing remove after
jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Get Configuration building script
      uses: actions/checkout@v4
      with:
          repository: jlvadell/general-scripts
          path: general-scripts
          ssh-key: ${{ secrets.SCRIPTS_REPO_SSH_PRIVATE }}

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Run build_pururu_secrets.py script
      run: python general-scripts/create_secrets_file/build_pururu_secrets.py

    - name: verify secrets created
      run: |
        if test -f ".env.production"; then echo "File exists"; else echo "File does not exist"; exit 1; fi

#    - name: Load EC2 Key
#      run: |
#        echo "${{ secrets.EC2_KEY }}" | base64 -d > /tmp/ssh_key
#        chmod 600 /tmp/ssh_key

#    - name: Copy project files to EC2
#      run: |
#        scp -o StrictHostKeyChecking=no -i /tmp/ssh_key -r ./* ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/app/

#    - name: Deploy on EC2
#      run: |
#        ssh -o StrictHostKeyChecking=no -i /tmp/ssh_key ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
#          cd /home/${{ secrets.EC2_USER }}/app/
#          docker build -t your-python-app .
#          docker stop your-python-app || true
#          docker rm your-python-app || true
#          docker run -d --name your-python-app -p 80:80 your-python-app
#        EOF